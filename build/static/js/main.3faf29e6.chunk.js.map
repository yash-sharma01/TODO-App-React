{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","push","updatedList","filter","item","type","name","onChange","e","updateInput","target","onClick","addItem","disabled","length","map","deleteItem","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oLAgFeA,E,kDA7Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IALS,E,wDASPC,EAAKC,GAEfC,KAAKC,SAAL,eAAiBH,EAAMC,M,gCAKvB,IAAMH,EAAU,CACdM,GAAI,EAAIC,KAAKC,SACbL,MAAOC,KAAKL,MAAMC,SAIdC,EAAI,YAAOG,KAAKL,MAAME,MAI5BA,EAAKQ,KAAKT,GAGVI,KAAKC,SAAS,CACZJ,OACAD,QAAS,O,iCAIFM,GAET,IAEMI,EAFI,YAAON,KAAKL,MAAME,MAEHU,QAAO,SAACC,GAAD,OAAUA,EAAKN,KAAOA,KAEtDF,KAAKC,SAAS,CAAEJ,KAAMS,M,+BAGd,IAAD,OACP,OACE,6BACE,4CADF,cAGE,2BACEG,KAAK,OACLC,KAAK,UACLX,MAAOC,KAAKL,MAAMC,QAClBe,SAAU,SAACC,GAAD,OAAO,EAAKC,YAAYD,EAAEE,OAAOJ,KAAME,EAAEE,OAAOf,UAE5D,4BACEgB,QAAS,kBAAM,EAAKC,WACpBC,UAAWjB,KAAKL,MAAMC,QAAQsB,QAFhC,OAMA,6BACA,4BACGlB,KAAKL,MAAME,KAAKsB,KAAI,SAACX,GACpB,OACE,wBAAIV,IAAKU,EAAKN,IACXM,EAAKT,MACN,4BAAQgB,QAAS,kBAAM,EAAKK,WAAWZ,EAAKN,MAA5C,e,GApEEmB,IAAMC,WCExBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3faf29e6.chunk.js","sourcesContent":["import React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newItem: \"\",\n      list: [],\n    };\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem,\n    };\n\n    // copy current list of items\n    const list = [...this.state.list];\n    // console.log(list);\n\n    // add the new item to the list\n    list.push(newItem);\n\n    // update state with new list, reset the new item input\n    this.setState({\n      list,\n      newItem: \"\",\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list];\n    // filter out the item being deleted\n    const updatedList = list.filter((item) => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>My TODO List</h1>\n        Add an Item\n        <input\n          type=\"text\"\n          name=\"newItem\"\n          value={this.state.newItem}\n          onChange={(e) => this.updateInput(e.target.name, e.target.value)}\n        />\n        <button\n          onClick={() => this.addItem()}\n          disabled={!this.state.newItem.length}\n        >\n          Add\n        </button>\n        <br />\n        <ul>\n          {this.state.list.map((item) => {\n            return (\n              <li key={item.id}>\n                {item.value}\n                <button onClick={() => this.deleteItem(item.id)}>X</button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}