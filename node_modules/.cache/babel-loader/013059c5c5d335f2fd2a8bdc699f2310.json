{"ast":null,"code":"var _jsxFileName = \"/home/yash/REACT PROJECTS/TODO-App-React/src/App.js\";\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem\n    }; // copy current list of items\n\n    const list = [...this.state.list]; // console.log(list);\n    // add the new item to the list\n\n    list.push(newItem); // update state with new list, reset the new item input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list]; // filter out the item being deleted\n\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"My TODO List\"), \"Add an Item...\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"newItem\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(e.target.name, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      disabled: !this.state.newItem.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, this.state.list.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, item.value, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.deleteItem(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, \"X\"));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/yash/REACT PROJECTS/TODO-App-React/src/App.js"],"names":["React","App","Component","constructor","props","state","newItem","list","updateInput","key","value","setState","addItem","id","Math","random","push","deleteItem","updatedList","filter","item","render","e","target","name","length","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAa;AACtB;AACA,SAAKC,QAAL,CAAc;AAAE,OAACF,GAAD,GAAOC;AAAT,KAAd;AACD;;AAEDE,EAAAA,OAAO,GAAG;AACR;AACA,UAAMN,OAAO,GAAG;AACdO,MAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADM;AAEdL,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC;AAFJ,KAAhB,CAFQ,CAOR;;AACA,UAAMC,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CARQ,CASR;AAEA;;AACAA,IAAAA,IAAI,CAACS,IAAL,CAAUV,OAAV,EAZQ,CAcR;;AACA,SAAKK,QAAL,CAAc;AACZJ,MAAAA,IADY;AAEZD,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID;;AAEDW,EAAAA,UAAU,CAACJ,EAAD,EAAK;AACb;AACA,UAAMN,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CAFa,CAGb;;AACA,UAAMW,WAAW,GAAGX,IAAI,CAACY,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAlC,CAApB;AAEA,SAAKF,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAEW;AAAR,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,iCAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,OAHpB;AAIE,MAAA,QAAQ,EAAGgB,CAAD,IAAO,KAAKd,WAAL,CAAiBc,CAAC,CAACC,MAAF,CAASC,IAA1B,EAAgCF,CAAC,CAACC,MAAF,CAASb,KAAzC,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eASE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKE,OAAL,EADjB;AAEE,MAAA,QAAQ,EAAE,CAAC,KAAKP,KAAL,CAAWC,OAAX,CAAmBmB,MAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKpB,KAAL,CAAWE,IAAX,CAAgBmB,GAAhB,CAAqBN,IAAD,IAAU;AAC7B,0BACE;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,IAAI,CAACV,KADR,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKO,UAAL,CAAgBG,IAAI,CAACP,EAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAMD,KAPA,CADH,CAhBF,CADF;AA6BD;;AA3E+B;;AA8ElC,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newItem: \"\",\n      list: [],\n    };\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({ [key]: value });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem,\n    };\n\n    // copy current list of items\n    const list = [...this.state.list];\n    // console.log(list);\n\n    // add the new item to the list\n    list.push(newItem);\n\n    // update state with new list, reset the new item input\n    this.setState({\n      list,\n      newItem: \"\",\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list];\n    // filter out the item being deleted\n    const updatedList = list.filter((item) => item.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>My TODO List</h1>\n        Add an Item...\n        <input\n          type=\"text\"\n          name=\"newItem\"\n          value={this.state.newItem}\n          onChange={(e) => this.updateInput(e.target.name, e.target.value)}\n        />\n        <button\n          onClick={() => this.addItem()}\n          disabled={!this.state.newItem.length}\n        >\n          +\n        </button>\n        <br />\n        <ul>\n          {this.state.list.map((item) => {\n            return (\n              <li key={item.id}>\n                {item.value}\n                <button onClick={() => this.deleteItem(item.id)}>X</button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}